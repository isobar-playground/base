services:
  mariadb:
    image: wodby/mariadb:$MARIADB_TAG
    container_name: "${PROJECT_NAME}_mariadb"
    stop_grace_period: 30s
    environment:
      MYSQL_ROOT_PASSWORD: $DB_ROOT_PASSWORD
      MYSQL_DATABASE: $DB_NAME
      MYSQL_USER: $DB_USER
      MYSQL_PASSWORD: $DB_PASSWORD
      MYSQL_TRANSACTION_ISOLATION: READ-COMMITTED
    volumes:
      - ./docker/mariadb:/docker-entrypoint-initdb.d # Place init .sql file(s) here.

  php:
    build:
      dockerfile: docker/php/Dockerfile
      args:
        PHP_TAG: $PHP_TAG
        NODE_IMAGE: "${PROJECT_NAME}-node"
      context: .
    container_name: "${PROJECT_NAME}_php"
    depends_on:
      - node
    environment:
      ENVIRONMENT: local
      # PHP 8.2+ supports "PHP_MAIL_MIXED_LF_AND_CRLF=On" and does not need dos2unix workaround.
      PHP_MAIL_MIXED_LF_AND_CRLF: On
      PHP_SENDMAIL_PATH: '/usr/bin/msmtp -t'
#     # PHP 8.1 and previous version require dos2unix workaround.
#      PHP_SENDMAIL_PATH: '"/usr/bin/dos2unix -u | /usr/bin/msmtp -t"'
      MSMTP_HOST: mailpit
      MSMTP_PORT: 1025
      DB_HOST: $DB_HOST
      DB_PORT: $DB_PORT
      DB_USER: $DB_USER
      DB_PASSWORD: $DB_PASSWORD
      DB_NAME: $DB_NAME
      DB_DRIVER: $DB_DRIVER
      DRUSH_OPTIONS_URI: "http://${PROJECT_BASE_URL}:${PROJECT_PORT}"
      PHP_FPM_USER: wodby
      PHP_FPM_GROUP: wodby
#      COLUMNS: 80 # Set 80 columns for docker exec -it.
#      # Read instructions at https://wodby.com/docs/stacks/php/local/#xdebug
#      PHP_XDEBUG: 1
#      PHP_XDEBUG_MODE: debug
#      PHP_XDEBUG_MODE: profile
#      PHP_XDEBUG_USE_COMPRESSION: false
#      PHP_IDE_CONFIG: serverName=my-ide
#      PHP_XDEBUG_IDEKEY: "my-ide"
#      PHP_XDEBUG_CLIENT_HOST: 172.17.0.1 # Linux
#      PHP_XDEBUG_CLIENT_HOST: host.docker.internal # Docker 18.03+ Mac/Win
#      PHP_XDEBUG_CLIENT_HOST: 10.0.75.1 # Windows, Docker < 18.03
#      PHP_XDEBUG_LOG: /tmp/php-xdebug.log
#      # PHPUnit Drupal testing configurations
      SIMPLETEST_BASE_URL: "http://apache"
      SIMPLETEST_DB: "${DB_DRIVER}://${DB_USER}:${DB_PASSWORD}@${DB_HOST}/${DB_NAME}#tests_"
      MINK_DRIVER_ARGS_WEBDRIVER: '["chrome", {"browserName":"chrome","goog:chromeOptions":{"args":["--disable-gpu","--headless"]}}, "http://chrome:9515"]'
    volumes:
    - ./html:/var/www/html
    - ./docker/mariadb:/var/www/database

  crond:
    init: true
    build:
      dockerfile: docker/php/Dockerfile
      args:
        PHP_TAG: $PHP_TAG
        NODE_IMAGE: "${PROJECT_NAME}-node"
      context: .
    container_name: "${PROJECT_NAME}_crond"
    depends_on:
      - node
    environment:
      ENVIRONMENT: local
      CRONTAB: "0 * * * * drush -r /var/www/html/web cron"
      DB_HOST: $DB_HOST
      DB_PORT: $DB_PORT
      DB_USER: $DB_USER
      DB_PASSWORD: $DB_PASSWORD
      DB_NAME: $DB_NAME
      DB_DRIVER: $DB_DRIVER
    command: sudo -E crond -f -d 0
    volumes:
    - ./html:/var/www/html

  mailpit:
    image: axllent/mailpit
    container_name: "${PROJECT_NAME}_mailpit"
    labels:
      - "traefik.enable=true"
      - "traefik.http.services.${PROJECT_NAME}_mailpit.loadbalancer.server.port=8025"
      - "traefik.http.routers.${PROJECT_NAME}_mailpit.rule=Host(`mailpit.${PROJECT_BASE_URL}`)"

  apache:
    build:
      dockerfile: docker/apache/Dockerfile
      args:
        APACHE_TAG: $APACHE_TAG
        PHP_IMAGE: "${PROJECT_NAME}-php"
    container_name: "${PROJECT_NAME}_apache"
    depends_on:
    - php
    environment:
      APACHE_LOG_LEVEL: debug
      APACHE_BACKEND_HOST: php
      APACHE_VHOST_PRESET: php
      APACHE_DOCUMENT_ROOT: /var/www/html/web
    volumes:
    - ./html:/var/www/html
    labels:
    - "traefik.enable=true"
    - "traefik.http.routers.${PROJECT_NAME}_apache.rule=Host(`${PROJECT_BASE_URL}`)"

  pma:
    image: phpmyadmin/phpmyadmin
    container_name: "${PROJECT_NAME}_pma"
    environment:
      PMA_HOST: $DB_HOST
      PMA_USER: $DB_USER
      PMA_PASSWORD: $DB_PASSWORD
      UPLOAD_LIMIT: 1G
    labels:
    - "traefik.enable=true"
    - "traefik.http.routers.${PROJECT_NAME}_pma.rule=Host(`pma.${PROJECT_BASE_URL}`)"

#  redis:
#    container_name: "${PROJECT_NAME}_redis"
#    image: wodby/redis:$REDIS_TAG

#  memcached:
#    container_name: "${PROJECT_NAME}_memcached"
#    image: wodby/memcached:$MEMCACHED_TAG

  node:
    build:
      dockerfile: docker/node/Dockerfile
      args:
        NODE_TAG: $NODE_TAG
      context: .
    container_name: "${PROJECT_NAME}_node"
    working_dir: /var/www/html/web/themes/custom/base_starterkit
    volumes:
    - ./html:/var/www/html
    tty: true
    command: sh -c 'npm ci && npm run watch'

  storybook:
    build:
      dockerfile: docker/node/Dockerfile
      args:
        NODE_TAG: $NODE_TAG
      context: .
    container_name: "${PROJECT_NAME}_storybook"
    working_dir: /app/html/web/themes/custom/base_starterkit
    volumes:
      - ./:/app
    tty: true
    command: sh -c 'npm ci && npm run storybook'
    labels:
      - "traefik.enable=true"
      - "traefik.http.services.${PROJECT_NAME}_storybook.loadbalancer.server.port=6006"
      - "traefik.http.routers.${PROJECT_NAME}_storybook.rule=Host(`storybook.${PROJECT_BASE_URL}`)"

  storybook_drupal:
    build:
      dockerfile: docker/php/Dockerfile
      args:
        PHP_TAG: $PHP_TAG
        NODE_IMAGE: "${PROJECT_NAME}-node"
      context: .
    container_name: "${PROJECT_NAME}_storybook_drupal"
    depends_on:
      - node
    environment:
      DRUSH_OPTIONS_URI: "http://${PROJECT_BASE_URL}:${PROJECT_PORT}"
    command: watch -n 30 drush generate-all-stories --force
    volumes:
      - ./html:/var/www/html

#  elasticsearch:
#    image: wodby/elasticsearch:$ELASTICSEARCH_TAG
#    container_name: "${PROJECT_NAME}_elasticsearch"
#    environment:
#      ES_JAVA_OPTS: "-Xms500m -Xmx500m"
#    ulimits:
#      memlock:
#        soft: -1
#        hard: -1

  chrome:
    image: selenium/standalone-chrome:$SELENIUM_CHROME_TAG
    container_name: "${PROJECT_NAME}_chrome"
    volumes:
    - /dev/shm:/dev/shm
    entrypoint:
    - chromedriver
    - "--no-sandbox"
    - "--disable-dev-shm-usage"
    - "--log-path=/tmp/chromedriver.log"
    - "--verbose"
    - "--whitelisted-ips="
    ports:
    - "9515:9515"

  grumphp:
    init: true
    build:
      dockerfile: docker/grumphp/Dockerfile
      args:
        PHP_TAG: $PHP_TAG
      context: .
    container_name: "${PROJECT_NAME}_grumphp"
    working_dir: /home/wodby/app
    volumes:
      - ./:/home/wodby/app
    environment:
      PATH: /usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/home/wodby/.composer/vendor/bin:/var/www/html/vendor/bin:/var/www/html/bin:/home/wodby/app/html/vendor/bin

  supervisor:
    build:
      dockerfile: docker/supervisor/Dockerfile
      args:
        PHP_IMAGE: "${PROJECT_NAME}-php"
      context: .
    container_name: "${PROJECT_NAME}_supervisor"
    depends_on:
      - php
    volumes:
      - ./html:/var/www/html
      - ./docker/supervisor/conf.d:/etc/supervisor/conf.d

  rabbitmq:
    image: rabbitmq:3.13-management
    container_name: "${PROJECT_NAME}_rabbitmq"
    hostname: rabbitmq
    environment:
      - RABBITMQ_DEFAULT_USER=admin
      - RABBITMQ_DEFAULT_PASS=admin
    labels:
      - "traefik.enable=true"
      - "traefik.http.services.${PROJECT_NAME}_rabbitmq.loadbalancer.server.port=15672"
      - "traefik.http.routers.${PROJECT_NAME}_rabbitmq.rule=Host(`rabbitmq.${PROJECT_BASE_URL}`)"

#  mkdocs:
#    build:
#      dockerfile: docker/mkdocs/Dockerfile
#    container_name: "${PROJECT_NAME}_mkdocs"
#    init: true
#    volumes:
#      - ./:/docs
#    labels:
#      - "traefik.enable=true"
#      - "traefik.http.services.${PROJECT_NAME}_mkdocs.loadbalancer.server.port=8000"
#      - "traefik.http.routers.${PROJECT_NAME}_mkdocs.rule=Host(`mkdocs.${PROJECT_BASE_URL}`)"

  traefik:
    image: traefik:v3.0
    container_name: "${PROJECT_NAME}_traefik"
    command: --api.insecure=true --providers.docker --providers.docker.exposedbydefault=false
    ports:
    - "${PROJECT_PORT}:80"
    - '8080:8080' # Dashboard
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
