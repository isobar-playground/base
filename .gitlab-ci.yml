default:
  tags:
    - starterkit

stages:
  - build
  - deploy

build:
  image: docker:24.0.5
  stage: build
  services:
    - docker:24.0.5-dind
  variables:
    DOCKER_HOST: "tcp://docker:2375"
    DOCKER_TLS_CERTDIR: ""
  before_script:
    - apk add aws-cli git
    - aws ecr get-login-password --region eu-central-1 | docker login --username AWS --password-stdin $CI_REGISTRY
  script:
    - docker pull "$CI_REGISTRY/$CI_REPOSITORY_PHP:latest" || true
    - docker pull "$CI_REGISTRY/$CI_REPOSITORY_APACHE:latest" || true
    - docker build -f docker/Dockerfile --target app_php -t "$CI_REGISTRY/$CI_REPOSITORY_PHP:$CI_COMMIT_SHA" -t "$CI_REGISTRY/$CI_REPOSITORY_PHP:latest" --build-arg BUILDKIT_INLINE_CACHE=1 --cache-from "$CI_REGISTRY/$CI_REPOSITORY_PHP:latest" --progress=plain .
    - docker build -f docker/Dockerfile --target apache -t "$CI_REGISTRY/$CI_REPOSITORY_APACHE:$CI_COMMIT_SHA" -t "$CI_REGISTRY/$CI_REPOSITORY_APACHE:latest" --build-arg BUILDKIT_INLINE_CACHE=1 --cache-from "$CI_REGISTRY/$CI_REPOSITORY_APACHE:latest" --progress=plain .
    - docker push "$CI_REGISTRY/$CI_REPOSITORY_PHP:$CI_COMMIT_SHA"
    - docker push "$CI_REGISTRY/$CI_REPOSITORY_PHP:latest"
    - docker push "$CI_REGISTRY/$CI_REPOSITORY_APACHE:$CI_COMMIT_SHA"
    - docker push "$CI_REGISTRY/$CI_REPOSITORY_APACHE:latest"
  rules:
    - if: $CI_COMMIT_BRANCH == "master"
    - if: $CI_COMMIT_BRANCH == "develop"
    - if: $CI_MERGE_REQUEST_IID

.deploy_template:
  stage: deploy
  image: ubuntu
  before_script:
    - 'command -v ssh-agent >/dev/null || ( apt-get update -y && apt-get install openssh-client -y )'
    - eval $(ssh-agent -s)
    - chmod 400 "$SSH_PRIVATE_KEY"
    - ssh-add "$SSH_PRIVATE_KEY"
    - mkdir -p ~/.ssh
    - chmod 700 ~/.ssh
    - cp "$SSH_KNOWN_HOSTS" ~/.ssh/known_hosts
    - chmod 644 ~/.ssh/known_hosts
  script:
    - |
      ssh ${EC2_USER}@${EC2_HOST} << EOF
        cd $CI_PROJECT_NAME
        git fetch
        git checkout $CI_COMMIT_SHA

        export CI_REGISTRY=$CI_REGISTRY
        export CI_REPOSITORY_PHP=$CI_REPOSITORY_PHP
        export CI_REPOSITORY_APACHE=$CI_REPOSITORY_APACHE
        export CI_COMMIT_SHA=$CI_COMMIT_SHA

        aws ecr get-login-password --region eu-central-1 | docker login --username AWS --password-stdin $CI_REGISTRY

        task init:ec2

        task drush -- deploy

        docker image prune -af
      EOF
  needs:
    - build

deploy:
  extends: .deploy_template
  variables:
    ENV_NAME: main
    EC2_HOST: 63.178.51.193
    EC2_USER: ec2-user
  rules:
    - if: $CI_COMMIT_BRANCH == "master"
  environment:
    name: main
    url: https://$EC2_MAIN_HOST
